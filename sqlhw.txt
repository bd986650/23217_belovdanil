Глава 1: Простые запросы, сортировка, операции с набором, простая агрегация
1.1. Получить все уникальные компании
1.2. Получить общее количество компаний
1.3. Получить все уникальные товары в категории "Продукты питания"
1.4. Получить список всех уникальных компаний, названия которых начинаются с буквы А или В, отсортированных в алфавитном порядке
1.5. Получить все уникальные конечные продукты (т.е. изделия, которые нигде не используются в качестве сырья).
1.6. Приобретите все уникальные изделия, которые невозможно было изготовить
1.7. Приобретайте все уникальные изделия, которые сочетают в себе как материалы, так и изделия из
1.8. Узнайте минимальные и максимальные цены на бумагу
1.9. Получите среднюю цену и дисперсионную цену мяса, округленные до одного десятичного знака.

1.1
SELECT DISTINCT COMPANY FROM MANUFACTURER;

1.2
SELECT COUNT(DISTINCT COMPANY) FROM MANUFACTURER;

1.3
SELECT WARE
FROM CATEGORY
WHERE CLASS LIKE 'FOOD';

1.4
SELECT DISTINCT COMPANY   
FROM MANUFACTURER 
WHERE COMPANY like 'A%' OR COMPANY like 'B%'
ORDER BY COMPANY ASC
 
1.5
-- SELECT WARE  FROM PRODUCT
-- EXCEPT
-- SELECT WARE FROM MATERIAL 

1.6
-- SELECT WARE FROM MATERIAL
-- EXCEPT
-- SELECT ware from PRODUCT

1.7
— SELECT WARE FROM MATERIAL
— INTERSECT
— SELECT ware from PRODUCT

1.8
-- SELECT MIN(PRICE) , MAX(PRICE) 
-- FROM PRODUCT
-- WHERE WARE LIKE 'PAPER';

1.9
-- SELECT
-- ROUND(AVG(PRICE),1) , 
-- ROUND((AVG(PRICE*PRICE)) - (AVG(PRICE)*AVG(PRICE)),1)
-- FROM PRODUCT WHERE WARE LIKE 'Meat';

———————————————
Глава 2. Присоединяйтесь
2.1. Найдите все уникальные компании, производящие питьевую воду, в алфавитном порядке.
2.2. Найдите все компании, производящие товары в категории Сыроедение. Результат должен содержать уникальные пары
компаний и производимых ими изделий из данной категории и должен быть отсортирован сначала по изделию, а
затем по названию компании.
2.3. Получите все уникальные изделия в алфавитном порядке, которые могут быть изготовлены из изделий в категории минералов.
2.4. Найдите все уникальные компании, производящие товары как из категории топлива, так и из категории продуктов питания. Используйте соответствующую
операцию set в запросе.
2.5. Перепишите предыдущий запрос, не используя операции set. Дополните результат товарами из обеих
категорий. Допустимо получение нескольких строк для компаний, производящих несколько товаров из любой
указанной категории, но строки должны быть уникальными по результату.
2.6. Расположите в алфавитном порядке все компании, производящие как минимум 2 разных продукта из одной
категории.
2.7. Расположите в алфавитном порядке все уникальные продукты, которые могут быть изготовлены из чего угодно, кроме продуктов из категории
Минералы.
2.8. Расположите все уникальные компании в алфавитном порядке, реализующие производственные цепочки. Производственная
цепочка - это, по крайней мере, две последующие спецификации, когда в первой спецификации производятся изделия, которые используются в качестве материала
во второй спецификации. Примером такой цепочки с точки зрения товаров является Зерно->Мясная корова->Мясо.
2.9. Измените запрос из предыдущего задания, чтобы показать также производственную цепочку в разрезе изделий (3 из
них) с дополнительной сортировкой по среднему (это и материал, и продукт для данной компании).

2.1
SELECT DISTINCT MANUFACTURER.COMPANY AS COMPANY
		FROM MANUFACTURER
			INNER JOIN PRODUCT 
				ON MANUFACTURER.BILL_ID = PRODUCT.BILL_ID AND PRODUCT.WARE = 'Drinking water';

2.2
SELECT DISTINCT PRODUCT.WARE AS RAW_PRODUCT, MANUFACTURER.COMPANY AS COMPANY
	FROM CATEGORY
		INNER JOIN PRODUCT
			ON CATEGORY.WARE = PRODUCT.WARE AND CATEGORY.CLASS = 'Raw food'
				INNER JOIN MANUFACTURER
					ON MANUFACTURER.BILL_ID = PRODUCT.BILL_ID;

2.3
SELECT DISTINCT PRODUCT.WARE AS PRODUCT
	FROM CATEGORY
		INNER JOIN MATERIAL
			ON CATEGORY.WARE = MATERIAL.WARE AND CATEGORY.CLASS = 'Mineral'
				INNER JOIN PRODUCT
					ON MATERIAL.BILL_ID = PRODUCT.BILL_ID
						ORDER BY PRODUCT.WARE ASC;

2.4
SELECT COMPANY FROM MANUFACTURER
	INNER JOIN PRODUCT
		ON MANUFACTURER.BILL_ID == PRODUCT.BILL_ID
			INNER JOIN CATEGORY
				ON PRODUCT.WARE == CATEGORY.WARE
					WHERE CATEGORY.CLASS == 'Food'
INTERSECT
SELECT COMPANY FROM MANUFACTURER
	INNER JOIN PRODUCT
		ON MANUFACTURER.BILL_ID == PRODUCT.BILL_ID
			INNER JOIN CATEGORY
				ON PRODUCT.WARE == CATEGORY.WARE
					WHERE CATEGORY.CLASS == 'Fuel';

2.5 ---

2.6
SELECT DISTINCT m1.COMPANY
	FROM MANUFACTURER m1, MANUFACTURER m2
		INNER JOIN PRODUCT p1
			ON m1.BILL_ID == p1.BILL_ID
		INNER JOIN CATEGORY c1
			ON p1.WARE == c1.WARE
		INNER JOIN PRODUCT p2
			ON m1.COMPANY == m2.COMPANY AND m2.BILL_ID == p2.BILL_ID
		INNER JOIN CATEGORY c2
			ON p2.WARE == c2.WARE AND c1.CLASS == c2.CLASS
	WHERE p1.WARE <> p2.WARE;

2.7-2.9 ---
———————————————
Глава 3. Агрегирование
3.1. Отобразите все уникальные товары в алфавитном порядке с указанием минимальных и максимальных цен на каждый из них.
3.2. Отобразите 3 лучших товара с наибольшей разницей между минимальными и максимальными ценами.
3.3. Укажите топ-3 компаний, производящих наибольшее количество различных товаров.
3.4. Укажите цены на самые дорогие изделия для каждой категории. Результат должен быть упорядочен по
категориям.
3.5. Для каждой спецификации укажите компанию и списки всех продуктов и материалов. Результат должен быть
содержат ровно по одной строке на каждый счет и отсортированы по компаниям. Списки в результате должны быть представлены в виде строк со значениями, разделенными запятой.
3.6. Укажите компании в алфавитном порядке, которые производят большее количество различных товаров, чем
потребляют.
3.7. Покажите все компании, которые производят одну и ту же посуду более чем двумя различными способами (спецификации материалов).
3.8. Найдите все уникальные компании, производящие хотя бы одну посуду из каждой категории в наборе: Топливную, пищевую и
минеральную. Запрос должен быть легко изменяемым для использования любого набора категорий.
3.9. Для каждой компании получите список всех категорий используемых материалов и список категорий
продуктов. Результат должен содержать ровно одну строку для каждой компании, и каждый список должен содержать только уникальные
записи.
3.10. Для каждой компании покажите все производственные цепочки (отдельная строка для каждой компании/цепочки поставок). Здесь
производственная цепочка определяется как промежуточный продукт (изделия), представляющий собой как продукт для одного счета, так и
материал для другого, причем оба счета принадлежат одной и той же компании. Каждая цепочка должна быть представлена в таблице.
следующая форма (MATERIAL1,MATERIAL2,...) -[BILL_ID1]->(ПРОМЕЖУТОЧНЫЙ_ПРОДУКТ)-[BILL_ID2]-
>(ПРОДУКТ1, ПРОДУКТ2,...). Результат должен быть отсортирован по компании.

3.1
SELECT WARE, MIN(PRICE), MAX(PRICE) FROM PRODUCT
 GROUP BY WARE
 ORDER BY WARE ASC;

3.2
SELECT WARE , MIN(PRICE) , MAX(PRICE) FROM PRODUCT
 GROUP BY WARE
 ORDER BY (MAX(PRICE) - MIN(PRICE)) DESC
LIMIT 3;

3.3
SELECT COMPANY, COUNT(DISTINCT PRODUCT.WARE) AS TOP FROM MANUFACTURER
	INNER JOIN PRODUCT
		ON MANUFACTURER.BILL_ID == PRODUCT.BILL_ID
	GROUP BY COMPANY
	ORDER BY TOP DESC
LIMIT 3;

3.4
SELECT /*PRODUCT.WARE,*/ MAX(PRICE) AS 'MAX PRICE', CATEGORY.CLASS AS CATEGORY FROM CATEGORY
	INNER JOIN PRODUCT
		ON PRODUCT.WARE == CATEGORY.WARE
	GROUP BY CATEGORY.CLASS
	ORDER BY CATEGORY.CLASS;

3.5 ---

3.6
SELECT MANUFACTURER.COMPANY, COUNT(DISTINCT PRODUCT.WARE) AS CNT_PROD, COUNT(DISTINCT MATERIAL.WARE) AS CNT_MAT FROM MANUFACTURER
	INNER JOIN PRODUCT
		ON PRODUCT.BILL_ID == MANUFACTURER.BILL_ID
	INNER JOIN MATERIAL
		ON MATERIAL.BILL_ID == MANUFACTURER.BILL_ID
	GROUP BY MANUFACTURER.COMPANY HAVING CNT_PROD > CNT_MAT

3.7-3.10 ---
———————————————
Глава 4. Подзапросы
!!!Для всех задач старайтесь использовать как можно меньше подзапросов!!!
4.1. Покажите товар с наибольшей средней ценой по рынку.
4.2. Покажите по одному образцу посуды из каждой категории.
4.3. Укажите самую дорогую посуду в каждой категории и ее цену
4.4. Покажите список всех “жадных” компаний, т.е. компаний, продающих все производимые ими товары по
ценам, как минимум, на 20% превышающим среднюю цену на данный товар на рынке.
4.5. Покажите компании, которые производят все товары из любой категории. Результат должен содержать название компании
и категорию и сортироваться по категориям. Если компания таким образом охватывает несколько категорий,
для этой компании должно быть несколько строк. Чтобы подтвердить правильность результата, дополните его
дополнительной колонкой, в которой указаны все товары данной категории, которые на самом деле производит данная компания.
4.6. Для каждой спецификации укажите компанию, все материалы, продукцию, общую стоимость всех продуктов
с учетом их количества. В каждой накладной должна быть ровно одна строка, и результат должен быть заказан
компанией.
4.7. Для каждого показа товара
- все уникальные наборы материалов, используемые в различных вариантах спецификаций
- все возможные побочные продукты (т.е. дополнительные продукты в той же спецификации)
В каждой посуде должен быть ровно один ряд.
4.8. Покажите все компании с наибольшим количеством различных товаров, которые они производят, и их списки
товаров в алфавитном порядке.




———————————————
Глава 5. Планирование запросов
!!! Для всех задач используйте платформу Haskell framework для планирования запросов с последней версией базы данных!!!
5.1. Для запроса в задаче 2.3 напишите план как можно более эффективный.
5.2. Напишите запрос, который находит все тройки bill_id, material и product, где материал относится к
категории “Минералы”, а продукт - к категории “Материалы”. Результат должен быть упорядочен по bill_id и
ограничен первыми 50 тройками. Напишите план как можно более эффективным.
5.3. Для запроса в задаче 2.8 напишите план как можно более эффективным.
